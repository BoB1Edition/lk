server {
        listen 80;
        listen [::]:80;

        root /var/www/lk;

        index index.html index.htm index.nginx-debian.html;

        server_name lk lk.ath.ru lk.my.local;

	location / {
		return 301 https://$host$request_uri;
#		proxy_pass       http://localhost:8080;
#    		proxy_set_header Host      $host;
#    		proxy_set_header X-Real-IP $remote_addr;
	}

#        location /resource {
#                try_files $uri $uri/ =404;
#        }
#        location /convert {
#                try_files $uri $uri/ convert/$uri =404;
#        }
#        location ~ ^/ogg.*$ {
#                rewrite ^.*/(.*)$ /convert/$1 permanent;
#                try_files $uri $uri/ convert/$uri =404;
#        }
}

server {
	listen 8080;	
	listen [::]:8080;
	location / {
		return 301 https://$host$request_uri;
	}	
}

upstream django {
    server unix:///var/www/lk/lk.sock; # взаимодействие с uwsgi через Unix-сокет (мы воспользуемся этим вариантом позже) 
    # server 127.0.0.1:8001; # взаимодействие с uwsgi через веб-порт 
}

server {
	listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/ssl/certs/ath_public.crt;
        ssl_certificate_key /etc/ssl/private/ath_private.key;
	root /var/www/lk;	
	location / {
		uwsgi_pass  django;
		include uwsgi_params;
	}

	location /static {
		alias /var/www/lk/statics;
	}
	location ~ ^/ogg.*$ {
                rewrite ^.*/(.*)$ /converts/$1 permanent;
                try_files $uri $uri/ convert/$uri =404;
        }
	location /converts {
	        try_files $uri $uri/ convert/$uri =404;
	}
	location /queue-stats {
		proxy_pass http://srvpbx-tst.ath.ru/queue-stats;
	    	proxy_set_header Host $host;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_set_header X-Real-IP $remote_addr;
	}

}
